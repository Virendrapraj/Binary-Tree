public class SearchKey {
    static class Node {
        int data;
        Node left;
        Node right;

        Node(int data) {
            this.data = data;

        }
        public static Node insert(Node root , int val){
            if (root == null){
                root = new Node(val);
                return root;
            }
            if (root.data > val){
                root.left = insert(root.left,val);
            }else{
                root.right = insert(root.right,val);
            }
            return root;
        }

        public static boolean searchKey(Node root, int key) {
            if (root == null) {
                return false;
            }
            if (root.data == key) {
                return true;

            }
            if (root.data > key) {
                return searchKey(root.left, key);
            } else {
                return searchKey(root.right, key);
            }

        }


        public static void inorder(Node root) {
            if (root == null) {
                return;
            }
            inorder(root.left);
            System.out.print(root.data + " ");
            inorder(root.right);
        }

        public static void main(String[] args) {
            int Values[] = {10, 6, 4, 25, 7, 3, 1, 9};
            int key = 10;
            Node root = null;

            for (int val : Values) {
                root = insert(root, val);
            }

            System.out.print("Inorder traversal: ");
            inorder(root);
            System.out.println();

            if (searchKey(root, key)) {
                System.out.println("Found");
            } else {
                System.out.println("Not Found");
            }
        }
    }
}

